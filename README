
FREEDIAG - Free diagnostic software for OBD-II compliant motor vehicles.
-----------------------------------------------------------------------

This package contains 'core' software (called 'scantool') which
can be used to access your car's diagnostic system using a laptop
and a suitable interface cable.

scantool's user interface is a somewhat primitive command-line
system - but it also has an application interface ("freediag AIF")
that lets more sophisticated programs use the freediag core whilst
presenting the user with a more appealing interface.

Under this directory are the following sub-directories:

doc      -- Documentation that applies to the package as a whole.
scantool -- Source code for the 'scantool' core package.
include  -- Include files that describe the interface between
            scantool and the GUI application(s).
scangui  -- A basic GUI interface to scantool.

Other GUI applications will appear over time.


LICENSING:
~~~~~~~~~~

scantool is licensed under GPL - but other packages found here
may have other OpenSource licensing arrangements - which is OK
because each is a separate program and does not link against
scantool.  Check in each directory for details.


AUTHORS:
~~~~~~~~

Each package contains a list of it's contributors.


INSTALLATION:
~~~~~~~~~~~~~

Refer to doc/build_system.txt for more information;
contents of the "INSTALL" file should be ignored.

1) On linux / unix platforms : cmake is preferred, but the standard
GNU autotools also work.

For the moment, you should not run make install as it is
100% untested.

If you cloned freediag from the git repo and are not using cmake,
you may need to run automake+autoconf from the root source
directory to re-create the ./configure script.

Make sure to try "./configure --help" to view available
options.

./configure options:
--enable-scangui if you wish to build the gui (disabled by
default). This will require the fltk package & libraries.

2) On Windows platforms :
freediag uses CMake and your choice of compiler toolchain.
The win32 release was compiled with the mingw toolchain.
Refer to doc\build_system.txt for more details.

RUNNING:
~~~~~~~~

To run each application, you'll need an appropriate interface
to connect the serial port on a laptop computer to the
OBD-II port on your car.  With most available interfaces,
it would be inadvisable to use a computer powered from
wall socket because your car may not be adequately
grounded.
 
Check the README file in each tool directory for detailed instructions.

